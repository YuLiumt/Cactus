Grid
======

CoordBase
------------
The CoordBase thorn provides a method of registering coordinate systems and their properties.

CoordBase provides a way for specifying the extent of the simulation domain that is independent of the actual coordinate and symmetry thorns. This is necessary because the size of the physical domain is not necessarily the same as the size of the computational grid, which is usually enlarged by symmetry zones and/or boundary zones.

.. note::

    The black hole "source” region has a length scale of :math:`G M / c^{2}`, where G is Newton’s constant, M is the total mass of the two black holes, and c is the speed of light. The gravitational waves produced by the source have a length scale up to :math:`\sim 100 G M / c^{2}`. The source region requires grid zones of size :math:`\lesssim 0.01 G M / c^{2}` to accurately capture the details of the black holes’ interaction, while the extent of the grid needs to be several hundred :math:`G M / c^{2}` to accurately capture the details of the gravitational wave signal.

Parameter
^^^^^^^^^^
* Specifying the extent of the physical domain.

    >>> CoordBase::xmin = -10.0
    >>> CoordBase::xmax = +10.0
    >>> CoordBase::dx   = 1
    physical_min = xmin
    physical_max = xmax

* Boundary description for the lower x face.

    >>> CoordBase::boundary_size_x_lower     = 3
    >>> CoordBase::boundary_size_x_upper     = 3
    exterior_min = xmin
    exterior_max = xmax
    interior_min = exterior_min + dx * boundary_size_x_lower 
    interior_max = exterior_max - dx * boundary_size_x_upper
    >>> CoordBase::boundary_shiftout_x_lower = 1
    >>> CoordBase::boundary_shiftout_x_lower = 1
    exterior_min = xmin - dx * boundary_shiftout_x_lower
    exterior_max = xmax + dx * boundary_shiftout_x_upper
    >>> CoordBase::boundary_internal_x_lower = "yes"
    >>> CoordBase::boundary_internal_x_upper = "yes"
    exterior_min = xmin - dx * (boundary_size_x_lower - 1 + boundary_shiftout_x_lower)
    exterior_max = xmax + dx * (boundary_size_x_upper - 1 + boundary_shiftout_x_upper)
    >>> CoordBase::boundary_staggered_x_lower = "yes"
    >>> CoordBase::boundary_staggered_x_upper = "yes"
    exterior_min = xmin - dx * (boundary_size_x_lower - 1 + 0.5 + boundary_shiftout_x_lower)
    exterior_max = xmax + dx * (boundary_size_x_upper - 1 + 0.5 + boundary_shiftout_x_upper)

Warning
^^^^^^^
* The boundary must be contained in the active part of the domain boundaries <= domain_active

    >>> CoordBase::xmin = -200.0
    >>> CoordBase::xmax = +200.0

CartGrid3D
-------------
CartGrid3D allows you to set up coordinates on a 3D Cartesian grid in a flexible manner.

.. digraph:: foo

   "CartGrid3D" -> "Coordinate";

Parameter
^^^^^^^^^^
* Get specification from CoordBase

    >>> CartGrid3D::type = "coordbase"

* Get specification from MultiPatch

    >>> CartGrid3D::type = "multipatch"
    >>> CartGrid3D::set_coordinate_ranges_on = "all maps"

Boundary
----------------
Provides a generic interface to boundary conditions, and provides a set of standard boundary conditions for one, two, and three dimensional grid variables.

.. digraph:: foo

   "Boundary" -> "SymBase";

Warning
^^^^^^^^^^
* The aliased function 'SymmetryTableHandleForGrid' (required by thorn 'Boundary') has not been provided by any active thorn !

    >>> ActiveThorns = "SymBase"