======
Kranc
======
Introduction
-------------
Kranc is a suite of Mathematica-based computer-algebra packages, which comprise a toolbox to convert certain (tensorial) systems of partial differential evolution equations to parallelized C code for solving initial boundary value problems. **It does this by generating Cactus thorns, allowing use of all the infrastructure provided by Cactus.**



Kranc interfaces with MoL and one of itâ€™s main functions is to produce the RHS evaluation routine for the evolution equations.

The user has to use Kranc mathematica routines to define tensors and their properties and how they relate to the Cactus grid functions.

Run
----
Run Kranc to build the <thornname> thorn:

.. code-block:: bash

    Kranc/Bin/kranc <thornname>.m

There should be a new directory, <thornname>, which is the Cactus thorn which has been newly generated from the <thornname>.m Kranc script.

The scripts look for a Kranc installation in the "m" directory, in the Cactus root directory and in $HOME as well as in the location where they find the kranc shell-script if it is in the $PATH. If your Kranc (or kranc) directory is in neither of these places, then you can set the environment variable KRANCPATH to the location of your Kranc installation.

Data structures
----------------
Mathematica does not have the concept of a C++ class or a C structure, in which collections of named objects are grouped together for ease of manipulation. Instead, we have defined a Kranc structure as a list of rules of the form ``key -> value``.

Name
^^^^^
The name of a calculation is a string which will be used as the function name in Cactus.

    >>> Name -> "Example"

Creating a Kranc thorn
-----------------------

``CreateThorn[groups, directory, thornName, namedArgs]``

.. note::

    If you want to use TensorTools tensors in calculations, you must call the CreateThornTT function instead of this one.